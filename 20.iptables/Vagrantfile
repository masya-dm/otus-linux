# -*- mode: ruby -*-
# vim: set ft=ruby :
# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
    :inetRouter => {
        :box_name => "centos/6",
        :net => [
                   {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "router-net"},
                ]
  },
    :inetRouter2 => {
        :box_name => "centos/6",
        :net => [
                   {ip: '192.168.255.3', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "router-net"},
                ]
                
  },
  :centralRouter => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.248", virtualbox__intnet: "router-net"},
                   {ip: '192.168.0.1',  adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                   {ip: '192.168.0.33', adapter: 4, netmask: "255.255.255.240", virtualbox__intnet: "hw-net"},
                   {ip: '192.168.0.65', adapter: 5, netmask: "255.255.255.192", virtualbox__intnet: "mgt-net"},
                ]
  },
  
  :centralServer => {
        :box_name => "centos/7",
        :net => [
                   {ip: '192.168.0.2', adapter: 2, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                ]
  },
}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s

        boxconfig[:net].each do |ipconf|
          box.vm.network "private_network", ipconf
        end
        
        if boxconfig.key?(:public)
          box.vm.network "public_network", boxconfig[:public]
        end

        box.vm.provision "shell", inline: <<-SHELL
          mkdir -p ~root/.ssh
                cp ~vagrant/.ssh/auth* ~root/.ssh
        SHELL
        
        case boxname.to_s
        when "inetRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
	    iptables -F
            iptables -X
	    iptables -N SSH-INPUT
	    iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
	    iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -m recent --rcheck --seconds 30 --name SSH1 -j ACCEPT
	    iptables -A INPUT -m state --state NEW -m tcp -p tcp -m recent --name SSH1 --remove -j DROP
	    iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 18223 -m recent --rcheck --name SSH0 -j SSH-INPUT
	    iptables -A INPUT -m state --state NEW -m tcp -p tcp -m recent --name SSH0 --remove -j DROP
	    iptables -A INPUT -m state --state NEW -m tcp -p tcp --dport 12222 -m recent --name SSH0 --set -j DROP
	    iptables -A SSH-INPUT -m recent --name SSH1 --set -j DROP
	    iptables -A INPUT -m tcp -p tcp --dport 22 -j DROP
            iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
            ip r add 192.168.0.0/24 via 192.168.255.2
            SHELL
	when "inetRouter2"
	  box.vm.network "forwarded_port", guest: 80, host:8080
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            sysctl net.ipv4.conf.all.forwarding=1
            iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
	    iptables -t nat -A POSTROUTING -p tcp -d 192.168.0.2 --dport 80 -j SNAT --to-source 192.168.255.3
	    iptables -t nat -A PREROUTING -p tcp -i eth0 --dport 80 -j DNAT --to-destination 192.168.0.2:80
            ip r add 192.168.0.0/24 via 192.168.255.2
            SHELL
        when "centralRouter"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            systemctl restart network
            ip a add 192.168.0.30/28 dev eth2 label eth2:1
            ip r add 0.0.0.0/0 via 192.168.255.1
            sysctl net.ipv4.conf.all.forwarding=1
	    yum install -y nmap
            SHELL
        when "centralServer"
          box.vm.provision "shell", run: "always", inline: <<-SHELL
            echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0 
            systemctl restart network
            ip r add 0.0.0.0/0 via 192.168.0.1
	    yum install -y epel-release
	    yum install -y nginx
	    systemctl start nginx
            SHELL
         end
        end
       end
      end
